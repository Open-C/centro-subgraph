// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositMade extends ethereum.Event {
  get params(): DepositMade__Params {
    return new DepositMade__Params(this);
  }
}

export class DepositMade__Params {
  _event: DepositMade;

  constructor(event: DepositMade) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WalletCreated extends ethereum.Event {
  get params(): WalletCreated__Params {
    return new WalletCreated__Params(this);
  }
}

export class WalletCreated__Params {
  _event: WalletCreated;

  constructor(event: WalletCreated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isFirstWallet(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class WithdrawalMade extends ethereum.Event {
  get params(): WithdrawalMade__Params {
    return new WithdrawalMade__Params(this);
  }
}

export class WithdrawalMade__Params {
  _event: WithdrawalMade;

  constructor(event: WithdrawalMade) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EventEmitter extends ethereum.SmartContract {
  static bind(address: Address): EventEmitter {
    return new EventEmitter("EventEmitter", address);
  }
}

export class EmitDepositMadeCall extends ethereum.Call {
  get inputs(): EmitDepositMadeCall__Inputs {
    return new EmitDepositMadeCall__Inputs(this);
  }

  get outputs(): EmitDepositMadeCall__Outputs {
    return new EmitDepositMadeCall__Outputs(this);
  }
}

export class EmitDepositMadeCall__Inputs {
  _call: EmitDepositMadeCall;

  constructor(call: EmitDepositMadeCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EmitDepositMadeCall__Outputs {
  _call: EmitDepositMadeCall;

  constructor(call: EmitDepositMadeCall) {
    this._call = call;
  }
}

export class EmitWalletCreatedCall extends ethereum.Call {
  get inputs(): EmitWalletCreatedCall__Inputs {
    return new EmitWalletCreatedCall__Inputs(this);
  }

  get outputs(): EmitWalletCreatedCall__Outputs {
    return new EmitWalletCreatedCall__Outputs(this);
  }
}

export class EmitWalletCreatedCall__Inputs {
  _call: EmitWalletCreatedCall;

  constructor(call: EmitWalletCreatedCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wallet(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get isFirstWallet(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class EmitWalletCreatedCall__Outputs {
  _call: EmitWalletCreatedCall;

  constructor(call: EmitWalletCreatedCall) {
    this._call = call;
  }
}

export class EmitWithdrawalMadeCall extends ethereum.Call {
  get inputs(): EmitWithdrawalMadeCall__Inputs {
    return new EmitWithdrawalMadeCall__Inputs(this);
  }

  get outputs(): EmitWithdrawalMadeCall__Outputs {
    return new EmitWithdrawalMadeCall__Outputs(this);
  }
}

export class EmitWithdrawalMadeCall__Inputs {
  _call: EmitWithdrawalMadeCall;

  constructor(call: EmitWithdrawalMadeCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EmitWithdrawalMadeCall__Outputs {
  _call: EmitWithdrawalMadeCall;

  constructor(call: EmitWithdrawalMadeCall) {
    this._call = call;
  }
}
